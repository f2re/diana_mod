/*
 * WdbQueries.h
 *
 *  Created on: Feb 26, 2010
 *      Author: juergens
 */

#ifndef WDBQUERIES_H_
#define WDBQUERIES_H_

/*
 $Id$

 Copyright (C) 2006 met.no

 Contact information:
 Norwegian Meteorological Institute
 Box 43 Blindern
 0313 OSLO
 NORWAY
 email: diana@met.no

 This file is part of generated by met.no

 This is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Tseries; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include "puTools/miTime.h"

#include <string>
#include <vector>

// collection of all wdb-queries performed by the pets::WdbStream

namespace pets
{
namespace QUERY
{
std::string RAW();
std::string BEGIN(     std::string user                     );
std::string CONNECT(   std::string host,  std::string user  );
std::string BROWSE(    std::string browse                   );
std::string READ(      std::string query                    );
std::string GRIDNAME(  std::string providerName             );
std::string GEOMETRY(  std::string gridName                 );
std::string PROJECTION(std::string gridName                 );
std::string LEVELS(    std::string providerName, miutil::miTime referencetime);
std::string TIMESERIES(std::string model, miutil::miTime run, std::string parameter, float lat, float lon, std::string height);
std::string CACHEQUERY(std::string model, std::string run, std::vector<std::string> parameters, std::string height="NULL");
std::string REFERENCETIMES( std::string providerName);
std::string PARAMETERS(std::string providerName, miutil::miTime referencetime);
};

};

#endif /* WDBQUERIES_H_ */
