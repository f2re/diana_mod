/*
 * WdbCacheQuery.cc
 *
 *  Created on: Apr 22, 2010
 *      Author: juergens
 */

/*
 $Id$

 Copyright (C) 2006 met.no

 Contact information:
 Norwegian Meteorological Institute
 Box 43 Blindern
 0313 OSLO
 NORWAY
 email: diana@met.no

 This file is part of generated by met.no

 This is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Tseries; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include "WdbCacheQuery.h"
#include "boost/date_time/posix_time/posix_time.hpp"

using namespace std;

namespace pets
{

bool WdbCacheQuery::sendCacheQuery(std::string model, std::string run, std::vector<std::string> parameters, std::string height)
{
  try {
    pqxx::work query(wdb,"sendCacheQuery");

    query.exec(QUERY::BEGIN(user));

    cout << " starting to sendCacheQuery" << flush;
    boost::posix_time::ptime before = boost::posix_time::microsec_clock::universal_time();
    query.exec(QUERY::CACHEQUERY(model,run,parameters,height));
    boost::posix_time::ptime after  = boost::posix_time::microsec_clock::universal_time();
    boost::posix_time::time_duration duration = after-before;
    cout << ".... finished. Used [ " <<   duration.total_milliseconds() << " ms ] " << endl;

  } catch (exception& e) {
    cerr << endl << "Exception while sending cacheQuery: " << e.what() <<endl;
    return false;
  }
  return true;
}

}
